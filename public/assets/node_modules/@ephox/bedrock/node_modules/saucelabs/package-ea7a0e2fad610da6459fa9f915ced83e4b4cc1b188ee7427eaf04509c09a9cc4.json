{
  "_args": [
    [
      {
        "raw": "saucelabs@https://registry.npmjs.org/saucelabs/-/saucelabs-1.4.0.tgz",
        "scope": null,
        "escapedName": "saucelabs",
        "name": "saucelabs",
        "rawSpec": "https://registry.npmjs.org/saucelabs/-/saucelabs-1.4.0.tgz",
        "spec": "https://registry.npmjs.org/saucelabs/-/saucelabs-1.4.0.tgz",
        "type": "remote"
      },
      "/home/bumblebee/tobee_blog/blog/tinymce/node_modules/@ephox/bedrock"
    ]
  ],
  "_from": "saucelabs@>=1.2.0 <2.0.0",
  "_id": "saucelabs@1.4.0",
  "_inCache": true,
  "_location": "/@ephox/bedrock/saucelabs",
  "_phantomChildren": {},
  "_requested": {
    "raw": "saucelabs@https://registry.npmjs.org/saucelabs/-/saucelabs-1.4.0.tgz",
    "scope": null,
    "escapedName": "saucelabs",
    "name": "saucelabs",
    "rawSpec": "https://registry.npmjs.org/saucelabs/-/saucelabs-1.4.0.tgz",
    "spec": "https://registry.npmjs.org/saucelabs/-/saucelabs-1.4.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/@ephox/bedrock"
  ],
  "_resolved": "https://registry.npmjs.org/saucelabs/-/saucelabs-1.4.0.tgz",
  "_shasum": "b934a9af9da2874b3f40aae1fcde50a4466f5f38",
  "_shrinkwrap": null,
  "_spec": "saucelabs@https://registry.npmjs.org/saucelabs/-/saucelabs-1.4.0.tgz",
  "_where": "/home/bumblebee/tobee_blog/blog/tinymce/node_modules/@ephox/bedrock",
  "author": {
    "name": "Dan Jenkins",
    "email": "dan.jenkins@holidayextras.com",
    "url": "www.dan-jenkins.co.uk"
  },
  "bugs": {
    "url": "https://github.com/holidayextras/node-saucelabs/issues"
  },
  "dependencies": {
    "https-proxy-agent": "^1.0.0"
  },
  "description": "A wrapper around Sauce Labs REST API",
  "devDependencies": {
    "chai": "1.5.x",
    "jshint": "*",
    "mocha": "1.9.x",
    "nock": "0.17.x",
    "url": "0.11.0"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/holidayextras/node-saucelabs",
  "name": "saucelabs",
  "optionalDependencies": {},
  "readme": "# node-saucelabs [![Build Status](https://secure.travis-ci.org/danjenkins/node-saucelabs.png)](http://travis-ci.org/danjenkins/node-saucelabs)[![Build Status](https://www.codeship.io/projects/83c9b290-21de-0131-e459-3688c4e23c72/status)](https://www.codeship.io/projects/83c9b290-21de-0131-e459-3688c4e23c72/status)\n\nWrapper around the Sauce Labs REST API for [Node.js](http://nodejs.org/).\n\n## Install\n\n```shell\nnpm install saucelabs\n```\n\n## Test\n\nTo run the test suite, first invoke the following command within the repo, installing the development dependencies:\n\n```shell\nnpm install\n```\n\nThen run the tests:\n\n```shell\nnpm test\n```\n\n## Authors\n\n- Dan Jenkins ([danjenkins](https://github.com/danjenkins))\n- Mathieu Sabourin ([OniOni](https://github.com/OniOni))\n- Daniel Perez Alvarez ([unindented](https://github.com/unindented))\n\n## Writing a script\n\n```javascript\nvar SauceLabs = require('saucelabs');\n\nvar myAccount = new SauceLabs({\n  username: \"your-sauce-username\",\n  password: \"your-sauce-api-key\"\n});\n\nmyAccount.getAccountDetails(function (err, res) {\n  console.log(res);\n  myAccount.getServiceStatus(function (err, res) {\n    // Status of the Sauce Labs services\n    console.log(res);\n    myAccount.getAllBrowsers(function (err, res) {\n      // List of all browser/os combinations currently supported on Sauce Labs\n      console.log(res);\n      myAccount.getJobs(function (err, jobs) {\n        // Get a list of all your jobs\n        for (var k in jobs) {\n          if ( jobs.hasOwnProperty( k )) {\n            myAccount.showJob(jobs[k].id, function (err, res) {\n              var str = res.id + \": Status: \" + res.status;\n              if (res.error) {\n                str += \"\\033[31m Error: \" + res.error + \" \\033[0m\";\n              }\n              console.log(str);\n            });\n          }\n        }\n      });\n    });\n  });\n});\n```\n## Using a proxy\nIf you're behind a corporate firewall or would like to utilize a proxy, define it in the constructor like this:\n\n```javascript\nvar sauce = new SauceLabs({\n  username: \"your-sauce-username\",\n  password: \"your-sauce-api-key\",\n  proxy: \"https://your-proxy.com:8000\"\n});\n```\n\n\n## Supported Methods\n\n<table>\n  <thead>\n    <tr>\n      <th width=\"50%\">REST</td>\n      <th width=\"50%\">Node Wrapper</td>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>\n        GET /users/:username <br />\n        Access account details.\n      </td>\n      <td>\n        getAccountDetails(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /:username/limits <br />\n        Access current account limits.\n      </td>\n      <td>\n        getAccountLimits(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /:username/activity <br />\n        Access current account activity.\n      </td>\n      <td>\n        getUserActivity(start, end, cb) -> cb(err, res) <br />\n        getUserActivity(start, cb) -> cb(err, res) <br />\n        getUserActivity(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /users/:username/concurrency <br />\n        Get currently running job counts broken down by account and job status\n      </td>\n      <td>\n        getUserConcurrency(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /users/:username/usage <br />\n        Access historical account usage data.\n      </td>\n      <td>\n        getAccountUsage(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /:username/jobs <br />\n        List all job IDs belonging to a given user.\n      </td>\n      <td>\n        getJobs(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /:username/jobs/:id <br />\n        Show the full information for a job given its ID.\n      </td>\n      <td>\n        showJob(id, cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        PUT /:username/jobs/:id <br />\n        Changes a pre-existing job.\n      </td>\n      <td>\n        updateJob(id, data, cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        DELETE /:username/jobs/:id <br />\n        Removes the job from the system with all the linked assets.\n      </td>\n      <td>\n        deleteJob(id, cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        PUT /:username/jobs/:id/stop <br />\n        Terminates a running job.\n      </td>\n      <td>\n        stopJob(id, data, cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /:username/tunnels <br />\n        Retrieves all running tunnels for a given user.\n      </td>\n      <td>\n        getActiveTunnels(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /:username/tunnels/:id <br />\n        Show the full information for a tunnel given its ID.\n      </td>\n      <td>\n        getTunnel(id, cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        DELETE /:username/tunnels/:id <br />\n        Shuts down a tunnel given its ID.\n      </td>\n      <td>\n        deleteTunnel(id, cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /info/status <br />\n        Returns the current status of Sauce Labs' services.\n      </td>\n      <td>\n        getServiceStatus(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /info/browsers/all <br />\n        Returns an array of strings corresponding to all the browsers currently supported on Sauce Labs.\n      </td>\n      <td>\n        getAllBrowsers(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /info/browsers/selenium-rc <br />\n        Returns an array of strings corresponding to all the browsers currently supported under Selenium on Sauce Labs.\n      </td>\n      <td>\n        getSeleniumBrowsers(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /info/browsers/webdriver <br />\n        Returns an array of strings corresponding to all the browsers currently supported under WebDriver on Sauce Labs.\n      </td>\n      <td>\n        getWebDriverBrowsers(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /info/counter <br />\n        Returns the number of test executed so far on Sauce Labs.\n      </td>\n      <td>\n        getTestCounter(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        POST /users/:username <br />\n        Create a new subaccount.\n      </td>\n      <td>\n        createSubAccount(data, cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        POST /users/:username/subscription <br />\n        Update a subaccount Sauce Labs service plan.\n      </td>\n      <td>\n        updateSubAccount(data, cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        DELETE /users/:username/subscription <br />\n        Unsubscribe a subaccount from its Sauce Labs service plan.\n      </td>\n      <td>\n        deleteSubAccount(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        Make a public link to a private job, without needing to login.\n      </td>\n      <td>\n        createPublicLink(job_id, datetime, use_hour, cb) -> cb(err, url) <br />\n        createPublicLink(job_id, datetime, cb) -> cb(err, url) <br />\n        createPublicLink(job_id, cb) -> cb(err, url)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /users/:username/list-subaccounts <br />\n        Access list of subaccounts\n      </td>\n      <td>\n        getSubAccountList(cb) -> cb(err, res)\n      </td>\n    </tr>\n    <tr>\n      <td>\n        GET /users/:username/subaccounts <br />\n        Get information about a sub accounts\n      </td>\n      <td>\n        getSubAccounts(cb) -> cb(err, res)\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n## More documentation\n\nCheck out the [Sauce REST API](https://saucelabs.com/docs/rest) for more information.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Dan Jenkins\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/holidayextras/node-saucelabs.git"
  },
  "scripts": {
    "test": "make lint test"
  },
  "version": "1.4.0"
}
