{
  "_args": [
    [
      {
        "raw": "nlf@https://registry.npmjs.org/nlf/-/nlf-1.4.3.tgz",
        "scope": null,
        "escapedName": "nlf",
        "name": "nlf",
        "rawSpec": "https://registry.npmjs.org/nlf/-/nlf-1.4.3.tgz",
        "spec": "https://registry.npmjs.org/nlf/-/nlf-1.4.3.tgz",
        "type": "remote"
      },
      "/home/bumblebee/tobee_blog/blog/tinymce/node_modules/@ephox/bedrock"
    ]
  ],
  "_from": "nlf@>=1.4.2 <2.0.0",
  "_id": "nlf@1.4.3",
  "_inCache": true,
  "_location": "/@ephox/bedrock/nlf",
  "_phantomChildren": {},
  "_requested": {
    "raw": "nlf@https://registry.npmjs.org/nlf/-/nlf-1.4.3.tgz",
    "scope": null,
    "escapedName": "nlf",
    "name": "nlf",
    "rawSpec": "https://registry.npmjs.org/nlf/-/nlf-1.4.3.tgz",
    "spec": "https://registry.npmjs.org/nlf/-/nlf-1.4.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [],
  "_resolved": "https://registry.npmjs.org/nlf/-/nlf-1.4.3.tgz",
  "_shasum": "3e8370a0bd0d1758b97d49d69d79bdcd0d1d113d",
  "_shrinkwrap": null,
  "_spec": "nlf@https://registry.npmjs.org/nlf/-/nlf-1.4.3.tgz",
  "_where": "/home/bumblebee/tobee_blog/blog/tinymce/node_modules/@ephox/bedrock",
  "author": {
    "name": "Ian Kelly",
    "email": "iandotkelly@gmail.com"
  },
  "bin": {
    "nlf": "./bin/nlf-cli.js"
  },
  "bugs": {
    "url": "https://github.com/iandotkelly/nlf/issues"
  },
  "dependencies": {
    "archy": "1.0.0",
    "commander": "2.9.0",
    "compare-versions": "3.0.0",
    "glob-all": "3.1.0  ",
    "read-installed": "4.0.3"
  },
  "description": "Find licenses for a node application and its node_module dependencies",
  "devDependencies": {
    "gulp": "^3.9.1",
    "gulp-coverage": "^0.3.36",
    "gulp-coveralls": "^0.1.3",
    "gulp-jshint": "^2.0.0",
    "gulp-mocha": "^3.0.0",
    "jshint": "^2.9.1",
    "should": "^11.2.0"
  },
  "engines": {
    "node": ">=0.10"
  },
  "homepage": "https://github.com/iandotkelly/nlf",
  "keywords": [
    "license",
    "licence",
    "checker",
    "finder",
    "audit",
    "legal",
    "dependency",
    "cli"
  ],
  "license": "MIT",
  "name": "nlf",
  "optionalDependencies": {},
  "readme": "<!-- @@NLF-IGNORE@@ -->\n\n# Node License Finder (nlf)\n\n[![Version](https://img.shields.io/npm/v/nlf.svg)](https://www.npmjs.com/package/nlf) [![Downloads](https://img.shields.io/npm/dm/nlf.svg)](https://www.npmjs.com/package/nlf)\n[![Build Status](https://img.shields.io/travis/iandotkelly/nlf.svg)](https://travis-ci.org/iandotkelly/nlf) [![Dependency Status](https://gemnasium.com/iandotkelly/nlf.png)](https://gemnasium.com/iandotkelly/nlf)\n[![Codacy Badge](https://www.codacy.com/project/badge/2c7e00c886b14a3a81e06a5eec19aa1f)](https://www.codacy.com/app/iandotkelly/nlf)\n[![Coveralls](https://img.shields.io/coveralls/iandotkelly/nlf.svg)](https://coveralls.io/r/iandotkelly/nlf)\n\nnlf is a utility for attempting to identify the licenses of modules in a node.js project.\n\nIt looks for license information in package.json, readme and license files in the project.  Please note, in many cases\nthe utility is looking\nfor standard strings in these files, such as MIT, BSD, Apache, GPL etc - this is not error free, so if you have any\nconcerns at all about the accuracy of the results, you will need to perform a detailed manual review of the project\nand its dependencies, reading all terms of any included or referenced license.\n\n## Use\n\nnlf can be used programmatically, or from the command line.\n\n## Options\n\n- `directory` (String) - where to look\n- `production` (Boolean) (Default:false) - only traverse dependencies, no dev-dependencies\n- `depth` (Number) (Default: Infinity) - how deep to traverse packages where 0 is the current package.json only\n- `summaryMode` (String: off|simple|detail) (Default: simple)\n\n\n### CLI\n\nTo install:\n\n```sh\n$ npm install -g nlf\n\n```\n\nTo use:\n\n```sh\n$ cd my-module\n$ nlf\n```\n\nExample output:\n<pre>\narchy@0.0.2 [license(s): MIT/X11]\n└── package.json:  MIT/X11\n\ncommander@0.6.1 [license(s): MIT]\n└── readme files: MIT\n\nglob@3.2.3 [license(s): BSD]\n├── package.json:  BSD\n└── license files: BSD\n\njson-stringify-safe@5.0.0 [license(s): BSD]\n├── package.json:  BSD\n└── license files: BSD\n\nread-installed@0.2.2 [license(s): BSD]\n└── license files: BSD\n\nshould@1.2.2 [license(s): MIT]\n└── readme files: MIT\n\nLICENSES: BSD, MIT, MIT/X11\n</pre>\n\nFor output in CSV format use the -c (or --csv) switch:\n\n```sh\n$ cd my-module\n$ nlf -c\n```\n\nTo exclude development dependencies and only analyze dependencies for production:\n\n```sh\n$ cd my-module\n$ nlf -d\n```\n\n#### Summary Mode\n\n`--summary <mode>` option, which can be set to \"off\", \"simple\" or \"detail\". This option controls what will be printed in summary in standard format.\n\n* `off` turns off summary output\n* `simple` shows a list of licenses used in the project, the default behavior\n* `detail` shows all modules in current project and group by licenses. As example below:\n\n```sh\nLICENSES:\n├─┬ BSD\n│ ├── amdefine@1.0.0\n│ ├── boom@0.4.2\n│ ├── cryptiles@0.2.2\n│ └── diff@1.4.0\n├─┬ BSD-2-Clause\n│ └── normalize-package-data@2.3.5\n├─┬ Apache-2.0\n│ ├── request@2.40.0\n│ ├── spdx-correct@1.0.2\n│ └── validate-npm-package-license@3.0.1\n├─┬ (MIT AND CC-BY-3.0)\n│ └── spdx-expression-parse@1.0.1\n└─┬ MPL\n  └── tough-cookie@2.2.1\n```\n\n### Programmatically\n\n```javascript\nvar nlf = require('nlf');\n\nnlf.find({ directory: '/User/me/my-project' }, function (err, data) {\n\t// do something with the response object.\n\tconsole.log(JSON.stringify(data));\n});\n\n// to only include production dependencies\nnlf.find({\n\tdirectory: '/User/me/my-project',\n\tproduction: true\n}, function (err, data) {\n\t// do something with the response object.\n\tconsole.log(JSON.stringify(data));\n});\n\n```\n\nThe data returned from find() is an array of modules, each of which is represented by an object as the following example:\n\n```\n{\n  \"id\": \"example@0.2.9\",\n  \"name\": \"example\",\n  \"version\": \"0.2.9\",\n  \"repository\": \"http:\\/\\/github.com\\/iandotkelly\\/example\",\n  \"directory\": \"\\/Users\\/ian\\/example\",\n  \"licenseSources\": {\n    \"package\": {\n      \"sources\": [\n        {\n          \"license\": \"MIT\",\n          \"url\": \"http://opensource.org/MIT\"\n        }\n      ]\n    },\n    \"license\": {\n      \"sources\": [\n        {\n          \"filePath\": \"\\/Users\\/ian\\/Personal\\/example\\/LICENSE\",\n          \"text\": \"the text of the license file\",\n          \"name\": function() { // function that returns the name of the license if known }\n        }\n      ]\n    },\n    \"readme\": {\n      \"sources\": [\n        {\n          \"filePath\": \"\\/Users\\/ian\\/Personal\\/example\\/readme.md\",\n          \"text\": \"text of the readme\"\n          \"name\": function() { // function that returns the name of the license if known }\n        }\n      ]\n    }\n  }\n}\n```\n\nEach\n\n### Tests\n\nTo run the unit tests, install development dependencies and run tests with 'gulp'.  Requires [gulp.js](http://gulpjs.com/) to be installed globally.\n\n```sh\n# only need to install gulp if you have not done so already\n$ npm install -g gulp\n$ cd nlf\n$ npm install\n$ gulp\n```\nIf you contribute to the project, tests are written in [mocha](http://visionmedia.github.com/mocha/), using [should.js](https://github.com/visionmedia/should.js/) or the node.js assert module.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/iandotkelly/nlf.git"
  },
  "scripts": {
    "test": "gulp travis"
  },
  "title": "Node License Finder",
  "version": "1.4.3"
}
