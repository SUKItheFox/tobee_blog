{
  "_args": [
    [
      {
        "raw": "xml-writer@https://registry.npmjs.org/xml-writer/-/xml-writer-1.7.0.tgz",
        "scope": null,
        "escapedName": "xml-writer",
        "name": "xml-writer",
        "rawSpec": "https://registry.npmjs.org/xml-writer/-/xml-writer-1.7.0.tgz",
        "spec": "https://registry.npmjs.org/xml-writer/-/xml-writer-1.7.0.tgz",
        "type": "remote"
      },
      "/home/bumblebee/tobee_blog/blog/tinymce/node_modules/@ephox/bedrock"
    ]
  ],
  "_from": "xml-writer@>=1.6.0 <2.0.0",
  "_id": "xml-writer@1.7.0",
  "_inCache": true,
  "_location": "/@ephox/bedrock/xml-writer",
  "_phantomChildren": {},
  "_requested": {
    "raw": "xml-writer@https://registry.npmjs.org/xml-writer/-/xml-writer-1.7.0.tgz",
    "scope": null,
    "escapedName": "xml-writer",
    "name": "xml-writer",
    "rawSpec": "https://registry.npmjs.org/xml-writer/-/xml-writer-1.7.0.tgz",
    "spec": "https://registry.npmjs.org/xml-writer/-/xml-writer-1.7.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/@ephox/bedrock"
  ],
  "_resolved": "https://registry.npmjs.org/xml-writer/-/xml-writer-1.7.0.tgz",
  "_shasum": "b76f1d591c16a2634ebdb703c7bdbd0fd6819065",
  "_shrinkwrap": null,
  "_spec": "xml-writer@https://registry.npmjs.org/xml-writer/-/xml-writer-1.7.0.tgz",
  "_where": "/home/bumblebee/tobee_blog/blog/tinymce/node_modules/@ephox/bedrock",
  "author": {
    "name": "Nicolas Thouvenin",
    "email": "nthouvenin@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/touv/node-xml-writer/issues"
  },
  "contributors": [
    {
      "name": "Anton Zem"
    },
    {
      "name": "Chip Lee",
      "url": "https://github.com/chipincode"
    },
    {
      "name": "Peecky",
      "url": "https://github.com/peecky"
    },
    {
      "name": "Julian Scheid",
      "url": "https://github.com/jscheid"
    }
  ],
  "dependencies": {},
  "description": "Native and full Javascript implementation of the classic XMLWriter class",
  "devDependencies": {
    "istanbul": "*",
    "nodeunit": ">=0.7.3"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "homepage": "http://github.com/touv/node-xml-writer",
  "keywords": [
    "xml",
    "writer",
    "XMLWriter",
    "generator"
  ],
  "license": "MIT",
  "main": "./index.js",
  "name": "xml-writer",
  "optionalDependencies": {},
  "readme": "# XMLWriter for NodeJS\n\n[![Build Status](https://secure.travis-ci.org/touv/node-xml-writer.png?branch=master)](http://travis-ci.org/touv/node-xml-writer)\n\nIt's native and full javascript implementation of the classic XMLWriter class.\nThe API is complete, flexible and tolerant.\nXML is still valid.\n\n## Contributors\n\n  * [Nicolas Thouvenin](https://github.com/touv)\n  * [Anton Zem](https://github.com/AlgoTrader)\n  * [Chip Lee](https://github.com/chipincode)\n  * [Peecky](https://github.com/peecky)\n  * [Julian Scheid](https://github.com/jscheid)\n  * [Guillaume Plique](https://github.com/Yomguithereal)\n\n# Installation\n\nWith [npm](http://npmjs.org) do:\n\n    $ npm install xml-writer\n\n\n# Examples\n\n## Basic\n```javascript\n\tvar XMLWriter = require('xml-writer');\n\txw = new XMLWriter;\n\txw.startDocument();\n\txw.startElement('root');\n\txw.writeAttribute('foo', 'value');\n\txw.text('Some content');\n\txw.endDocument();\n\n\tconsole.log(xw.toString());\n```\nOutput:\n\n\t<?xml version=\"1.0\"?>\n\t<root foo=\"value\">Some content</root>\n\nTip: If you want your XML **indented** use `new XMLWriter(true)` or `new XMLWriter('\\t')`, for instance, if you want to use a custom string for indentation.\n\n## Chaining\n```javascript\n\tvar XMLWriter = require('xml-writer');\n\txw = new XMLWriter;\n\txw.startDocument().startElement('root').writeAttribute('foo', 'value').writeElement('tag', 'Some content');\n\n\tconsole.log(xw.toString());\n```\nOutput:\n\n\t<?xml version=\"1.0\"?>\n\t<root foo=\"value\"><tag>Some content</tag></root>\n\n## Tolerant\n```javascript\n\tvar XMLWriter = require('xml-writer');\n\txw = new XMLWriter;\n\txw.startElement('root').writeAttribute('foo', 'value').text('Some content');\n\n\tconsole.log(xw.toString());\n```\nOutput:\n\n\t<root foo=\"value\">Some content</root>\n\n\n## Extensible\n```javascript\n\tvar XMLWriter = require('xml-writer'),\n               fs = require('fs');\n\tvar ws = fs.createWriteStream('/tmp/foo.xml');\n\tws.on('close', function() {\n\t\t\tconsole.log(fs.readFileSync('/tmp/foo.xml', 'UTF-8'));\n\t});\n\txw = new XMLWriter(false, function(string, encoding) {\n\t\t\tws.write(string, encoding);\n\t});\n\txw.startDocument('1.0', 'UTF-8').startElement(function() {\n\t\treturn 'root';\n\t}).text(function() {\n\t\treturn 'Some content';\n\t});\n\tws.end();\n```\n\nOutput:\n\n\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t<root>Some content</root>\n\n\n# Tests\n\nUse [nodeunit](https://github.com/caolan/nodeunit) to run the tests.\n\n    $ npm install nodeunit\n    $ nodeunit test\n\n# API Documentation\n\n## Generic\n\n### constructor XMLWriter(Boolean|String indent, Function writer(string, encoding))\nCreate an new writer\n\n### text(String content)\nWrite text\n\n### writeRaw\nWrite a raw XML text\n\n## Document\n### startDocument(String version = '1.0', String encoding = NULL, Boolean standalone = false)\nCreate document tag\n\n### endDocument()\nEnd current document\n\n## Element\n\n### writeElement(String name, String content)\nWrite full element tag\n\n### writeElementNS\nWrite full namespaced element tag\n\n### startElementNS\nCreate start namespaced element tag\n\n### startElement(String name)\nCreate start element tag\n\n### endElement()\nEnd current element\n\n## Attributes\n\n### writeAttribute(String name, String value)\nWrite full attribute\n\n### writeAttributeNS\nWrite full namespaced attribute\n\n### startAttributeNS\nCreate start namespaced attribute\n\n### startAttribute(String name)\nCreate start attribute\n\n### endAttribute()\nEnd attribute\n\n## Processing Instruction\n\n### writePI(String name, String content)\nWrites a PI\n\n### startPI(String name)\nCreate start PI tag\n\n### endPI()\nEnd current PI\n\n## DocType\n\n### writeDocType(String name, String pubid, String sysid, String subset)\nWrite a DocType\n\n### startDocType(String name, String pubid, String sysid, String subset)\nCreate start DocType tag\n\n### endDocType()\nEnd current DocType\n\n## CData\n\n### writeCData(String content)\nWrite full CDATA tag\n\n### startCData()\nCreate start CDATA tag\n\n### endCData()\nEnd current CDATA\n\n## Comment\n\n### writeComment(String content)\nWrite full comment tag\n\n### startComment()\nCreate start comment\n\n### endComment()\nCreate end comment\n\n# Also\n\n* https://github.com/minchenkov/simple-xml-writer\n* https://github.com/wezm/node-genx\n\n# License\n\n[MIT/X11](./LICENSE)\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/touv/node-xml-writer/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/touv/node-xml-writer.git"
  },
  "scripts": {
    "test": "istanbul test ./node_modules/.bin/nodeunit test/",
    "truc": "nodeunit test/"
  },
  "version": "1.7.0"
}
